[General]
image-path=../../../images
output-scalar-file-append = false
**.routingRecorder.enabled = false
allow-object-stealing-on-deletion = true
#network = simu5g.simulations.Custom.calibration_v3.Network
network = Network
cmdenv-interactive=true


############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec
seed-set = 15
**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP

**.measuredSinrDl:vector.vector-recording = true
#**.servingCellDl:vector.vector-recording = true
**.couplingGain:vector.vector-recording = true

**.servingSINR:vector.vector-recording = true
**.servingRSRP:vector.vector-recording = true
**.servingCell:vector.vector-recording = true
**.servingCouplingGain:vector.vector-recording = true



**.scalar-recording = false
**.vector-recording = false

############### SCTP configuration ##################
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

############### General PHY parameters ##############
**.scenario = "URBAN_MACROCELL"
**.ueTxPower = 23
**.eNodeBTxPower = 41
#*.gnb*.cellularNic.phy.microTxPower = 41
#*.ue[*].cellularNic.phy.microTxPower = 41
#*.ue[*].cellularNic.nrPhy.microTxPower = 41
**.targetBler = 0.0001
**.blerShift = 5  
**.fbPeriod = 40   # reports CQI every 40ms

**.ue_noise_figure = 7
**.bs_noise_figure = 5

**.nodeb_height = 25
**.building_height = 10


**.shadowing = true
**.fading = true
**.fading_type = "JAKES"
#**.fading_paths = ${f_paths=2,4,6,8,10}
**.fading_paths = 6


#**.cable_loss = 0
**.thermalNoise = -104 #based on the calculation for 10Mhz (https://www.electronics-notes.com/articles/basic_concepts/electronic-rf-noise/thermal-noise-calculations-calculator-formulas.php)
#**.thermalNoise = ${thermalNoise=-84,-94,-114,-124,-180}

**.downlink_interference = true
**.uplink_interference = false
**.bgCell_interference = false
**.extCell_interference = false
**.d2d_interference = false
**.enable_extCell_los = true
**.dynamic_los = true        #previously true
**.fixed_los = false
#**.useBuildingPenetrationHighLossModel = true

#**.rbyDl = ${rb=3300,6000}	


#*.channelControl.propagationModel = ${lossModel="FreeSpacePathLoss", "LogNormalShadowing", "TwoRayGroundReflection", "TwoRayInterference", "RicianFading", "RayleighFading"}
############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


#------------------------------------#
# Config MultiCell
#
# General configuration for the for a multicell NR Standalone deployment
#
[Config MultiCell]
sim-time-limit=${time=300s}
description = "Base configuration, do not run this config!"

############# Floorplan parameters ################

## FIX CONSTRAINT AREA
**.mobility.constraintAreaMaxX = 1500m
**.mobility.constraintAreaMaxY = 1500m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m



**.mobility.initFromDisplayString = false

############### CA configuration ################# 
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = 0
#*.carrierAggregation.componentCarrier[0].carrierFrequency = 700MHz
*.carrierAggregation.componentCarrier[0].carrierFrequency = 4GHz
*.carrierAggregation.componentCarrier[0].numBands = ${numbands=50}
#*.binder.maxDataRatePerRb = 100.16Mbps


*.gnb*.cellularNic.numCarriers = 1
*.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0

*.gnb*.cellularNic.channelModel[0].antennGainEnB = 8
*.ue[*].cellularNic.nrChannelModel[0].antennGainEnB = 8
*.ue[*].cellularNic.channelModel[0].antennGainEnB = 8
#**.antennGainMicro = 8	


############### BS position #################

*.gnb1.mobility.initialX = 600m
*.gnb1.mobility.initialY = 573m 

*.gnb2.mobility.initialX = 800m 
*.gnb2.mobility.initialY = 573m 

*.gnb3.mobility.initialX = 500m 
*.gnb3.mobility.initialY = 746m  

*.gnb4.mobility.initialX = 700m
*.gnb4.mobility.initialY = 746m 

*.gnb5.mobility.initialX = 900m
*.gnb5.mobility.initialY = 746m

*.gnb6.mobility.initialX = 600m
*.gnb6.mobility.initialY = 919m 

*.gnb7.mobility.initialX = 800m 
*.gnb7.mobility.initialY = 919m 

############### BS phy configuration #################
#*.gnb*.cellularNic.phy.txDirection = "ANISOTROPIC"


#*.gnb1.cellularNic.phy.txAngle = 30
#*.gnb2.cellularNic.phy.txAngle = 150
#*.gnb3.cellularNic.phy.txAngle = 270
#
#*.gnb4.cellularNic.phy.txAngle = 30
#*.gnb5.cellularNic.phy.txAngle = 150
#*.gnb6.cellularNic.phy.txAngle = 270
#
#*.gnb7.cellularNic.phy.txAngle = 30
#*.gnb8.cellularNic.phy.txAngle = 150
#*.gnb9.cellularNic.phy.txAngle = 270
#
#*.gnb10.cellularNic.phy.txAngle = 30
#*.gnb11.cellularNic.phy.txAngle = 150
#*.gnb12.cellularNic.phy.txAngle = 270
#
#*.gnb13.cellularNic.phy.txAngle = 30
#*.gnb14.cellularNic.phy.txAngle = 150
#*.gnb15.cellularNic.phy.txAngle = 270
#
#*.gnb16.cellularNic.phy.txAngle = 30
#*.gnb17.cellularNic.phy.txAngle = 150
#*.gnb18.cellularNic.phy.txAngle = 270
#
#*.gnb19.cellularNic.phy.txAngle = 30
#*.gnb20.cellularNic.phy.txAngle = 150
#*.gnb21.cellularNic.phy.txAngle = 270

############### X2 configuration #################
#*.gnb1.numX2Apps = 6
#*.gnb2.numX2Apps = 6
#*.gnb3.numX2Apps = 6
#*.gnb4.numX2Apps = 6
#*.gnb5.numX2Apps = 6
#*.gnb6.numX2Apps = 6
#*.gnb7.numX2Apps = 6
#
#*.gnb1.x2App[0].client.connectAddress = "gnb2%x2ppp0"
#*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp0"
#
#*.gnb1.x2App[1].client.connectAddress = "gnb3%x2ppp0"
#*.gnb3.x2App[0].client.connectAddress = "gnb1%x2ppp1"
#
#*.gnb1.x2App[2].client.connectAddress = "gnb4%x2ppp0"
#*.gnb4.x2App[0].client.connectAddress = "gnb1%x2ppp2"
#
#*.gnb1.x2App[3].client.connectAddress = "gnb5%x2ppp0"
#*.gnb5.x2App[0].client.connectAddress = "gnb1%x2ppp3"
#
#*.gnb1.x2App[4].client.connectAddress = "gnb6%x2ppp0"
#*.gnb6.x2App[0].client.connectAddress = "gnb1%x2ppp4"
#
#*.gnb1.x2App[5].client.connectAddress = "gnb7%x2ppp0"
#*.gnb7.x2App[0].client.connectAddress = "gnb1%x2ppp5"
#
#*.gnb2.x2App[1].client.connectAddress = "gnb3%x2ppp1"
#*.gnb3.x2App[1].client.connectAddress = "gnb2%x2ppp1"
#
#*.gnb2.x2App[2].client.connectAddress = "gnb4%x2ppp1"
#*.gnb4.x2App[1].client.connectAddress = "gnb2%x2ppp2"
#
#*.gnb2.x2App[3].client.connectAddress = "gnb5%x2ppp1"
#*.gnb5.x2App[1].client.connectAddress = "gnb2%x2ppp3"
#
#*.gnb2.x2App[4].client.connectAddress = "gnb6%x2ppp1"
#*.gnb6.x2App[1].client.connectAddress = "gnb2%x2ppp4"
#
#*.gnb2.x2App[5].client.connectAddress = "gnb7%x2ppp1"
#*.gnb7.x2App[1].client.connectAddress = "gnb2%x2ppp5"
#
#*.gnb3.x2App[2].client.connectAddress = "gnb4%x2ppp2"
#*.gnb4.x2App[2].client.connectAddress = "gnb3%x2ppp2"
#
#*.gnb3.x2App[3].client.connectAddress = "gnb5%x2ppp2"
#*.gnb5.x2App[2].client.connectAddress = "gnb3%x2ppp3"
#
#*.gnb3.x2App[4].client.connectAddress = "gnb6%x2ppp2"
#*.gnb6.x2App[2].client.connectAddress = "gnb3%x2ppp4"
#
#*.gnb3.x2App[5].client.connectAddress = "gnb7%x2ppp2"
#*.gnb7.x2App[2].client.connectAddress = "gnb3%x2ppp5"
#
#*.gnb4.x2App[3].client.connectAddress = "gnb5%x2ppp3"
#*.gnb5.x2App[3].client.connectAddress = "gnb4%x2ppp3"
#
#*.gnb4.x2App[4].client.connectAddress = "gnb6%x2ppp3"
#*.gnb6.x2App[3].client.connectAddress = "gnb4%x2ppp4"
#
#*.gnb4.x2App[5].client.connectAddress = "gnb7%x2ppp3"
#*.gnb7.x2App[3].client.connectAddress = "gnb4%x2ppp5"
#
#*.gnb5.x2App[4].client.connectAddress = "gnb6%x2ppp4"
#*.gnb6.x2App[4].client.connectAddress = "gnb5%x2ppp4"
#
#*.gnb5.x2App[5].client.connectAddress = "gnb7%x2ppp4"
#*.gnb7.x2App[4].client.connectAddress = "gnb5%x2ppp5"
#
#*.gnb6.x2App[5].client.connectAddress = "gnb7%x2ppp5"
#*.gnb7.x2App[5].client.connectAddress = "gnb6%x2ppp5"


########## Background cells configuration ############# 
*.numBgCells = 36
#*.numBgCells = 18

*.bgCell[*].bgScheduler.carrierFrequency = 4GHz
*.bgCell[*].bgScheduler.isNr = true 
*.bgCell[*].bgScheduler.txPower = 41

*.bgCell[*].bgScheduler.numerologyIndex = 0
*.bgCell[*].bgScheduler.numBands = 50
*.bgCell[*].bgChannelModel.antennGainEnB = 8
 

*.bgCell[*].bgScheduler.txDirection = "ANISOTROPIC"
#### first row
*.bgCell[0].mobility.initialX = 500m
*.bgCell[0].mobility.initialY = 400m
*.bgCell[1].mobility.initialX = 500m
*.bgCell[1].mobility.initialY = 400m
*.bgCell[2].mobility.initialX = 500m
*.bgCell[2].mobility.initialY = 400m

#*.bgCell[0].mobility.initialX = 200m
#*.bgCell[0].mobility.initialY = 100m

*.bgCell[3].mobility.initialX = 700m
*.bgCell[3].mobility.initialY = 400m 
*.bgCell[4].mobility.initialX = 700m
*.bgCell[4].mobility.initialY = 400m 
*.bgCell[5].mobility.initialX = 700m
*.bgCell[5].mobility.initialY = 400m 

#*.bgCell[1].mobility.initialX = 400m
#*.bgCell[1].mobility.initialY = 100m


*.bgCell[6].mobility.initialX = 900m 
*.bgCell[6].mobility.initialY = 400m 
*.bgCell[7].mobility.initialX = 900m 
*.bgCell[7].mobility.initialY = 400m 
*.bgCell[8].mobility.initialX = 900m 
*.bgCell[8].mobility.initialY = 400m 

#*.bgCell[2].mobility.initialX = 600m 
#*.bgCell[2].mobility.initialY = 100m 

#### second row
*.bgCell[9].mobility.initialX = 400m
*.bgCell[9].mobility.initialY = 573m
*.bgCell[10].mobility.initialX = 400m
*.bgCell[10].mobility.initialY = 573m
*.bgCell[11].mobility.initialX = 400m
*.bgCell[11].mobility.initialY = 573m

#*.bgCell[3].mobility.initialX = 100m
#*.bgCell[3].mobility.initialY = 273m


*.bgCell[12].mobility.initialX = 1000m
*.bgCell[12].mobility.initialY = 573m
*.bgCell[13].mobility.initialX = 1000m
*.bgCell[13].mobility.initialY = 573m
*.bgCell[14].mobility.initialX = 1000m
*.bgCell[14].mobility.initialY = 573m

#*.bgCell[6].mobility.initialX = 700m
#*.bgCell[6].mobility.initialY = 273m

#### third row
*.bgCell[15].mobility.initialX = 300m
*.bgCell[15].mobility.initialY = 746m
*.bgCell[16].mobility.initialX = 300m
*.bgCell[16].mobility.initialY = 746m
*.bgCell[17].mobility.initialX = 300m
*.bgCell[17].mobility.initialY = 746m

#*.bgCell[7].mobility.initialX = 0m
#*.bgCell[7].mobility.initialY = 446m


*.bgCell[18].mobility.initialX = 1100m
*.bgCell[18].mobility.initialY = 746m
*.bgCell[19].mobility.initialX = 1100m
*.bgCell[19].mobility.initialY = 746m
*.bgCell[20].mobility.initialX = 1100m
*.bgCell[20].mobility.initialY = 746m

#*.bgCell[10].mobility.initialX = 800m
#*.bgCell[10].mobility.initialY = 446m

#### fourth row
*.bgCell[21].mobility.initialX = 400m
*.bgCell[21].mobility.initialY = 919m
*.bgCell[22].mobility.initialX = 400m
*.bgCell[22].mobility.initialY = 919m
*.bgCell[23].mobility.initialX = 400m
*.bgCell[23].mobility.initialY = 919m

#*.bgCell[11].mobility.initialX = 100m
#*.bgCell[11].mobility.initialY = 619m

*.bgCell[24].mobility.initialX = 1000m
*.bgCell[24].mobility.initialY = 919m
*.bgCell[25].mobility.initialX = 1000m
*.bgCell[25].mobility.initialY = 919m
*.bgCell[26].mobility.initialX = 1000m
*.bgCell[26].mobility.initialY = 919m

#*.bgCell[14].mobility.initialX = 700m
#*.bgCell[14].mobility.initialY = 619m

#### fifth row
*.bgCell[27].mobility.initialX = 500m
*.bgCell[27].mobility.initialY = 1092m
*.bgCell[28].mobility.initialX = 500m
*.bgCell[28].mobility.initialY = 1092m
*.bgCell[29].mobility.initialX = 500m
*.bgCell[29].mobility.initialY = 1092m

#*.bgCell[15].mobility.initialX = 200m
#*.bgCell[15].mobility.initialY = 792m

*.bgCell[30].mobility.initialX = 700m
*.bgCell[30].mobility.initialY = 1092m 
*.bgCell[31].mobility.initialX = 700m
*.bgCell[31].mobility.initialY = 1092m 
*.bgCell[32].mobility.initialX = 700m
*.bgCell[32].mobility.initialY = 1092m 

#*.bgCell[16].mobility.initialX = 400m
#*.bgCell[16].mobility.initialY = 792m 

*.bgCell[33].mobility.initialX = 900m 
*.bgCell[33].mobility.initialY = 1092m 
*.bgCell[34].mobility.initialX = 900m 
*.bgCell[34].mobility.initialY = 1092m 
*.bgCell[35].mobility.initialX = 900m 
*.bgCell[35].mobility.initialY = 1092m 

#*.bgCell[17].mobility.initialX = 600m 
#*.bgCell[17].mobility.initialY = 792m 

*.bgCell[0].bgScheduler.txAngle = 30
*.bgCell[1].bgScheduler.txAngle = 150
*.bgCell[2].bgScheduler.txAngle = 270

*.bgCell[3].bgScheduler.txAngle = 30
*.bgCell[4].bgScheduler.txAngle = 150
*.bgCell[5].bgScheduler.txAngle = 270

*.bgCell[6].bgScheduler.txAngle = 30
*.bgCell[7].bgScheduler.txAngle = 150
*.bgCell[8].bgScheduler.txAngle = 270

*.bgCell[9].bgScheduler.txAngle = 30
*.bgCell[10].bgScheduler.txAngle = 150
*.bgCell[11].bgScheduler.txAngle = 270

*.bgCell[12].bgScheduler.txAngle = 30
*.bgCell[13].bgScheduler.txAngle = 150
*.bgCell[14].bgScheduler.txAngle = 270

*.bgCell[15].bgScheduler.txAngle = 30
*.bgCell[16].bgScheduler.txAngle = 150
*.bgCell[17].bgScheduler.txAngle = 270

*.bgCell[18].bgScheduler.txAngle = 30
*.bgCell[19].bgScheduler.txAngle = 150
*.bgCell[20].bgScheduler.txAngle = 270

*.bgCell[21].bgScheduler.txAngle = 30
*.bgCell[22].bgScheduler.txAngle = 150
*.bgCell[23].bgScheduler.txAngle = 270

*.bgCell[24].bgScheduler.txAngle = 30
*.bgCell[25].bgScheduler.txAngle = 150
*.bgCell[26].bgScheduler.txAngle = 270

*.bgCell[27].bgScheduler.txAngle = 30
*.bgCell[28].bgScheduler.txAngle = 150
*.bgCell[29].bgScheduler.txAngle = 270

*.bgCell[30].bgScheduler.txAngle = 30
*.bgCell[31].bgScheduler.txAngle = 150
*.bgCell[32].bgScheduler.txAngle = 270

*.bgCell[33].bgScheduler.txAngle = 30
*.bgCell[34].bgScheduler.txAngle = 150
*.bgCell[35].bgScheduler.txAngle = 270

# number and position of background UEs in the background cells 
*.bgCell[*].bgTrafficGenerator.numBgUes = 360
*.bgCell[*].bgTrafficGenerator.computeAvgInterference = true

#*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(0m,900m)  
#*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(0m,900m)  

*.bgCell[*].bgTrafficGenerator.bgUE[{0..29}].mobility.initialX = uniform(400m,600m)  
*.bgCell[*].bgTrafficGenerator.bgUE[{0..29}].mobility.initialY = uniform(314m,486m)                                                      
                                                                                                         
*.bgCell[*].bgTrafficGenerator.bgUE[{30..59}].mobility.initialX = uniform(600m,800m)  
*.bgCell[*].bgTrafficGenerator.bgUE[{30..59}].mobility.initialY = uniform(314m,486m)                                                     
                                                                                                         
*.bgCell[*].bgTrafficGenerator.bgUE[{60..89}].mobility.initialX = uniform(800m,1000m)  
*.bgCell[*].bgTrafficGenerator.bgUE[{60..89}].mobility.initialY = uniform(314m,486m)                                                     
                                                                                                         
*.bgCell[*].bgTrafficGenerator.bgUE[{90..119}].mobility.initialX = uniform(300m,500m)   
*.bgCell[*].bgTrafficGenerator.bgUE[{90..119}].mobility.initialY = uniform(487m,659m)                                                   
                                                                                                                                                                                                                  
*.bgCell[*].bgTrafficGenerator.bgUE[{120..149}].mobility.initialX = uniform(900m,1100m)
*.bgCell[*].bgTrafficGenerator.bgUE[{120..149}].mobility.initialY = uniform(487m,659m)                                                  
                                                                                                         
*.bgCell[*].bgTrafficGenerator.bgUE[{150..179}].mobility.initialX = uniform(300m,400m)
*.bgCell[*].bgTrafficGenerator.bgUE[{150..179}].mobility.initialY = uniform(660m,832m)                                              
                                                                                                         
*.bgCell[*].bgTrafficGenerator.bgUE[{180..209}].mobility.initialX = uniform(1000m,1200m)
*.bgCell[*].bgTrafficGenerator.bgUE[{180..209}].mobility.initialY = uniform(660m,832m)                                                  
                                                                                                         
*.bgCell[*].bgTrafficGenerator.bgUE[{210..239}].mobility.initialX = uniform(300m,500m)  
*.bgCell[*].bgTrafficGenerator.bgUE[{210..239}].mobility.initialY = uniform(833m,1005m)                                                
                                                                                                         
*.bgCell[*].bgTrafficGenerator.bgUE[{240..269}].mobility.initialX = uniform(900m,1100m)
*.bgCell[*].bgTrafficGenerator.bgUE[{240..269}].mobility.initialY = uniform(833m,1005m)                                                  
                                                                                                                                       
*.bgCell[*].bgTrafficGenerator.bgUE[{270..299}].mobility.initialX = uniform(400m,600m)                                                 
*.bgCell[*].bgTrafficGenerator.bgUE[{270..299}].mobility.initialY = uniform(1006m,1178m)                                                  
                                                                                                                                       
*.bgCell[*].bgTrafficGenerator.bgUE[{300..329}].mobility.initialX = uniform(600m,800m)                                                 
*.bgCell[*].bgTrafficGenerator.bgUE[{300..329}].mobility.initialY = uniform(1006m,1178m)                                                  
                                                                                                                                       
*.bgCell[*].bgTrafficGenerator.bgUE[{330..359}].mobility.initialX = uniform(800m,1000m)                                                 
*.bgCell[*].bgTrafficGenerator.bgUE[{330..359}].mobility.initialY = uniform(1006m,1178m)                  



#*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(200m,600m)
#*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(200m,700m)
*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.typename = "RandomWaypointMobility"
*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.speed = 0.8333mps

# Background traffic in the background cells
*.bgCell[*].bgTrafficGenerator.bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr" 
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeDl = uniform(0s,0.05s) 
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.finishTimeDl = uniform(199.9s,199.92s)
#*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeDl = 1000B 
#*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodDl = 0.004s 
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeDl = 30B 
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodDl = 1s 

############## UE configuration ##################
#*.numUe = ${numUEs=10,30,210}
*.numUe = ${numUEs=210}

**.dist = ${UEdistance=10m}


# UEs associates to the best BS at the beginning of the simulation
*.ue[*].macCellId = 0
*.ue[*].masterId = 0
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1
**.dynamicCellAssociation = true
**.enableHandover = false
**.hysteresisFactor = 0
**.hysteresis = 0
#**.losslessHandover = false


############ UEs position #################  
#gnb10 position 400,446
*.ue[*].mobility.typename = "RandomWaypointMobility"
#*.ue[*].mobility.initialX = uniform(320m,480m)
#*.ue[*].mobility.initialY = uniform(366m,526m)

#*.ue[*].mobility.initialX = uniform(150m,650m)
#*.ue[*].mobility.initialY = uniform(196m,696m)
#*.ue[*].mobility.initialX = uniform(${minx=10m,20m},${maxx=30m,510m})

#*.ue[*].mobility.initialX = uniform(300m-${UEdistance},300m+${UEdistance})
#*.ue[*].mobility.initialY = uniform(196m,696m)


*.ue[{0..29}].mobility.initialX = uniform(600m-${UEdistance},600m+${UEdistance})  
*.ue[{0..29}].mobility.initialY = uniform(573m-${UEdistance},573m+${UEdistance})                                                      
                                                                                                         
*.ue[{30..59}].mobility.initialX = uniform(800m-${UEdistance},800m+${UEdistance})  
*.ue[{30..59}].mobility.initialY = uniform(573m-${UEdistance},573m+${UEdistance})                        
                                                                                                         
*.ue[{60..89}].mobility.initialX = uniform(500m-${UEdistance},500m+${UEdistance})  
*.ue[{60..89}].mobility.initialY = uniform(746m-${UEdistance},746m+${UEdistance})                                                     
                                                                                                         
*.ue[{90..119}].mobility.initialX = uniform(700m-${UEdistance},700m+${UEdistance})   
*.ue[{90..119}].mobility.initialY = uniform(746m-${UEdistance},746m+${UEdistance})                                                   

*.ue[{120..149}].mobility.initialX = uniform(900m-${UEdistance},900m+${UEdistance})
*.ue[{120..149}].mobility.initialY = uniform(746m-${UEdistance},746m+${UEdistance})                                                  
                                                                                                         
*.ue[{150..179}].mobility.initialX = uniform(600m-${UEdistance},600m+${UEdistance})
*.ue[{150..179}].mobility.initialY = uniform(919m-${UEdistance},919m+${UEdistance})                                              
                                                                                                         
*.ue[{180..209}].mobility.initialX = uniform(800m-${UEdistance},800m+${UEdistance})
*.ue[{180..209}].mobility.initialY = uniform(919m-${UEdistance},919m+${UEdistance}) 


#*.ue[*].mobility.initialY = uniform(766m,1566m)
#*.ue[*].mobility.initialY = uniform(100m,300m)

#*.ue[*].mobility.speed = uniform(3mps,13.89mps)
*.ue[{0..168}].mobility.speed = 0.8333mps
*.ue[{169..209}].mobility.speed = 8.333mps


*.ue[{0..168}].cellularNic.channelModel[*].inside_building = true
*.ue[{0..168}].cellularNic.nrChannelModel[*].inside_building = true
#*.ue[{0..5}].cellularNic.channelModel[*].inside_building = false
#*.ue[{0..5}].cellularNic.nrChannelModel[*].inside_building = false


*.ue[*].cellularNic.channelModel[*].inside_building = false
*.ue[*].cellularNic.nrChannelModel[*].inside_building = false

*.ue[{0..42}].cellularNic.nrChannelModel[*].useBuildingPenetrationHighLossModel = true
*.ue[*].cellularNic.nrChannelModel[*].useBuildingPenetrationHighLossModel = false



#**.ue_height = 3 * uniform(1,uniform(4,8))+ 1.5
#*.ue[{0..5}].cellularNic.channelModel[*].ue_height = 1.5
#*.ue[{0..5}].cellularNic.nrChannelModel[*].ue_height =  1.5


*.ue[{0..168}].cellularNic.channelModel[*].ue_height = 3 * (uniform(1,uniform(4,8))-1)+ 1.5
*.ue[{0..168}].cellularNic.nrChannelModel[*].ue_height = 3 * (uniform(1,uniform(4,8))-1)+ 1.5
**.ue_height = 1.5
 
#------------------------------------#

#------------------------------------#
# Config CBR-DL
#
# Configuration with CBR DL traffic from a remote server to the UEs
# 
[Config CBR-DL]
extends = MultiCell
description = "CBR DL traffic from remote server to UEs"

# one UDP application for each user
*.ue[*].numApps = 1

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = ${numUEs}

#============= Application Setup =============
*.ue[*].app[*].typename = "CbrReceiver"
*.ue[*].app[*].localPort = 3000

*.server.app[*].typename = "CbrSender"
#*.server.app[*].PacketSize = ${packetSize=100,550,1000} # 30 
#*.server.app[*].sampling_time = ${samplingTime=1s,0.01s,0.005s}#1s 
*.server.app[*].PacketSize = 100 # 30 
*.server.app[*].sampling_time = 1s#1s 

*.server.app[*].destAddress = "ue[" + string(ancestorIndex(0)) + "]"
*.server.app[*].destPort = 3000 
*.server.app[*].localPort = 3088+ancestorIndex(0) 
*.server.app[*].startTime = uniform(0s,0.02s)
*.server.app[*].finishTime = uniform(199.9s,199.92s)

#------------------------------------#



#------------------------------------#
# Config CBR-UL
#
# Configuration with CBR UL traffic from the UEs to a remote server
# 
[Config CBR-UL]
extends=MultiCell
description = "CBR UL traffic from UEs to remote server"

# one UDP application for each user
*.ue[*].numApps = 1

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = ${numUEs}

#============= Application Setup =============
*.server.app[*].typename = "CbrReceiver"
*.server.app[*].localPort = 3000 + ancestorIndex(0)

*.ue[*].app[*].typename = "CbrSender"
*.ue[*].app[*].PacketSize = 100
*.ue[*].app[*].sampling_time = 0.02s
*.ue[*].app[*].destAddress = "server" 
*.ue[*].app[*].destPort = 3000 + ancestorIndex(1) 
*.ue[*].app[*].localPort = 3088+ancestorIndex(0)
*.ue[*].app[*].startTime = uniform(0s,0.02s)
*.ue[*].app[*].finishTime = uniform(99.9s,99.92s)
#------------------------------------#


########## Background cells configuration ############# 
#*.numBgCells = 10

#*.bgCell[*].bgScheduler.carrierFrequency = 700MHz
#*.bgCell[*].bgScheduler.isNr = true 
#*.bgCell[*].bgScheduler.txPower = 30
#*.bgCell[*].bgScheduler.txDirection = "OMNI"
#*.bgCell[*].bgScheduler.txAngle = 0
#*.bgCell[*].bgScheduler.numerologyIndex = 0
#*.bgCell[*].bgScheduler.numBands = 6
#*.bgCell[*].bgChannelModel.antennGainEnB = 18
 
# position of the background gNodeB 
#*.bgCell[*].mobility.initialX = 1000m 
#*.bgCell[*].mobility.initialY = 966m

 
# number and position of background UEs in the background cells 
#*.bgCell[*].bgTrafficGenerator.numBgUes = 100
#*.bgCell[*].bgTrafficGenerator.computeAvgInterference = true
#*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.initialX = normal(235m,120m) 
#*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.initialY = normal(235m,120m) 
 
# Background traffic in the background cells
#*.bgCell[*].bgTrafficGenerator.bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr" 
#*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeDl = uniform(0s,0.05s) 
#*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeDl = 1000B 
#*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodDl = 0.01s 



